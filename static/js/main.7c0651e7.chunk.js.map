{"version":3,"sources":["store/reducers/searchReducer.js","store/reducers/index.js","store/actions/types.js","store/store.js","components/layout/MovieNavbar.js","components/layout/MovieFooter.js","components/home/SearchForm.js","store/actions/searchActions.js","APIKey.js","components/layout/Spinner.js","components/home/MovieItem.js","components/home/Movies.js","components/home/Landing.js","components/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["initialState","text","movies","isLoading","movie","error","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","MovieNavbar","Navbar","variant","bg","Brand","to","style","color","fontSize","Toggle","Collapse","className","Nav","MovieFooter","sticky","marginTop","Col","lg","span","offset","md","sm","xs","connect","searchMovie","dispatch","fetchMovies","a","axios","get","res","console","log","data","Response","Search","response","useState","searchText","setSearchText","useEffect","Row","alignContent","Card","textAlign","Title","Body","Form","Group","controlId","Control","value","onChange","event","target","setValueSearchText","placeholder","Button","onClick","Spinner","withRouter","Poster","Year","imdbID","history","Img","src","maxHeight","push","length","map","index","key","Container","fluid","justifyContent","fetchMovie","Rated","Released","Runtime","Genre","Writer","Director","Actors","imdbRating","match","params","id","Image","rounded","marginLeft","Text","App","path","exact","component","Movie","Landing","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7c0651e7.chunk.js","sourcesContent":["import {SEARCH_MOVIE, FETCH_MOVIES_ERROR, FETCH_MOVIES, FETCH_MOVIE,START_LOADING,STOP_LOADING} from '../actions/types'\n\nconst initialState={\n    //search text\n    text:'',\n    //Array of movies\n    movies:[],\n    //Loading State\n    isLoading:false,\n    // Selected Movie\n    movie:[],\n    error:null\n};\n\nexport default function(state=initialState,action)\n{\n    const{type,payload}=action;\n    switch(type)\n    {\n        case SEARCH_MOVIE:\n            return{\n                ...state,\n                text:payload,\n                isLoading:false,\n                error:null\n            }\n        case FETCH_MOVIES:\n            return{\n                ...state,\n                movies:payload,\n                isLoading:false,\n                error:null\n            }\n        case FETCH_MOVIE:\n            return{\n                ...state,\n                movie:payload,\n                isLoading:false,\n                error:null\n            }\n        case START_LOADING:\n            return{\n                ...state,\n                isLoading:true,\n                error:null\n            }\n        case STOP_LOADING:\n            return{\n                ...state,\n                isLoading:false,\n                error:null\n            }\n        case FETCH_MOVIES_ERROR:\n            return{\n                ...state,\n                error:'Server Error',\n                isLoading:false,\n                movies:[]\n            }\n        \n        default:\n            return state;\n    }\n\n}","import {combineReducers} from 'redux'\nimport searchReducer from './searchReducer'\nexport default combineReducers({\n    movies:searchReducer\n})","export const SEARCH_MOVIE=\"SEARCH_MOVIE\"\nexport const FETCH_MOVIES='FETCH_MOVIES'\nexport const FETCH_MOVIE='FETCH_MOVIE'\nexport const FETCH_MOVIES_ERROR='FETCH_MOVIES_ERROR'\nexport const START_LOADING='START_LOADING'\nexport const STOP_LOADING='STOP_LOADING'","import {createStore,applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState=[];\n\nconst middleware=[thunk];\n\nconst store=createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport {Link} from 'react-router-dom'\nconst MovieNavbar = () => {\n    return (\n        <Navbar  variant=\"dark\" bg=\"dark\">\n            <Navbar.Brand ><Link to=\"/\" style={{color:'#79ffb7',fontSize:'30px'}}>MovieSeriesInfo</Link></Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n                {/* <Nav.Text >\n                <span className=\"fab fa-imdb fa-4x\" style={{color:'#79ffb7'}}></span>\n                </Nav.Text> */}\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default MovieNavbar\n","import React from 'react'\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Typist from 'react-typist'\nconst MovieFooter = () => {\n    return (\n        <Navbar sticky=\"bottom\"  variant=\"dark\" style={{marginTop:'55vh'}} bg=\"dark\">\n               <Col lg={{span:6,offset:3}} md={{span:8,offset:2}} sm={{span:10,offset:1}} xs={{span:12,offset:0}} >\n               <Typist>\n               <span style={{color:'white',fontSize:'25px'}}>Developed by  </span>\n                   <span style={{color:'#79ffb7',fontSize:'25px'}}> Sanjay Garg </span>\n                   <span style={{color:'white',fontSize:'25px'}}> using  </span>\n                   <span style={{color:'#79ffb7',fontSize:'25px'}}>  React </span>\n                   <span style={{color:'white',fontSize:'25px'}}> and </span>\n                   <span style={{color:'#79ffb7',fontSize:'25px'}}> Redux </span>\n                </Typist>\n                  \n               </Col> \n        </Navbar>\n    )\n}\n\nexport default MovieFooter\n","import React,{useState,useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport {connect} from 'react-redux';\nimport {searchMovie,fetchMovies} from '../../store/actions/searchActions';\n\nconst SearchForm = ({searchMovie,fetchMovies,text}) => {\n\n\n    const[searchText,setSearchText]=useState('');\n\n   const setValueSearchText = (event)=>\n   {\n        setSearchText(event.target.value);\n   }\n   useEffect(()=>{\n    searchMovie(searchText);   \n   },[searchText])\n\n    return (\n            <Row style={{alignContent:'center'}}>\n                <Col lg={{span:12}} md={{span:12}} sm={{span:12}} xs={{span:12}}>\n                <Card bg=\"dark\" text=\"white\" style={{textAlign:'center'}}>\n                    <Card.Title style={{marginTop:'2vh'}}>Search For Movies or Tv Series</Card.Title>\n                    <Card.Body >\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control \n                            type=\"text\" \n                            value={searchText} \n                            onChange={(event)=>setValueSearchText(event)} \n                            placeholder=\"Search For a movie or any Tv Series \" \n                            \n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"button\" onClick={()=>fetchMovies(text)} >\n                            Search\n                        </Button>\n                    </Form>\n                    </Card.Body>\n                </Card>\n                </Col>\n            </Row>\n            \n    )\n}\n\nSearchForm.propTypes = {\n    text:PropTypes.object.isRequired,\n    searchMovie:PropTypes.func.isRequired,\n    fetchMovies:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state  => ({\n    text : state.movies.text \n})\n\nexport default connect(mapStateToProps,{searchMovie,fetchMovies})(SearchForm)\n","import {SEARCH_MOVIE,FETCH_MOVIES,FETCH_MOVIE, FETCH_MOVIES_ERROR,START_LOADING,STOP_LOADING} from './types';\nimport axios from 'axios';\nimport {APIkey} from '../../APIKey';\nexport const searchMovie = (text) => dispatch => {\n    \n    dispatch({\n        type:SEARCH_MOVIE,\n        payload:text\n    });\n}\n\nexport const fetchMovies = (text) => async dispatch => {\n    \n    try {\n        dispatch({type:START_LOADING})\n\n        const res= await axios.get(`https://www.omdbapi.com/?apikey=${APIkey}&s=${text}`);\n        \n        console.log(res);\n        dispatch({type:STOP_LOADING})\n\n        if(res.data.Response==='False')\n        {\n            dispatch({\n                type:FETCH_MOVIES_ERROR\n            })\n        }\n        else\n        {\n            dispatch({\n                type:FETCH_MOVIES,\n                payload:res.data.Search\n            })\n           \n        }\n        \n    } catch (error) {\n        console.log(error.response);\n        dispatch({\n            type:FETCH_MOVIES_ERROR\n        })\n    }\n}\n\nexport const fetchMovie = (imdbID) => async dispatch =>{\n    try {\n        \n        dispatch({type:START_LOADING})\n        \n        const res = await axios.get(`https://www.omdbapi.com/?apikey=${APIkey}&i=${imdbID}`);\n        \n        dispatch({type:STOP_LOADING})\n\n        if(res.data.Response==='False')\n        {\n            dispatch({\n                type:FETCH_MOVIES_ERROR\n            })\n        }\n        else\n        {\n            dispatch({\n                type:FETCH_MOVIE,\n                payload:res.data\n            })\n           \n        }\n        \n       \n    } catch (error) {\n        console.log(error.response);\n        dispatch({\n            type:FETCH_MOVIES_ERROR\n        })\n    }\n}\n"," export const APIkey='1d3c2680'","import React from 'react'\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-hourglass\" style={{marginTop:'15vh'}}></div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport {withRouter} from 'react-router-dom';\nconst MovieItem = ({movie:{Title,Poster,Year,imdbID},history}) => {\n    return (\n        <Col lg={3} md={4} sm={6} xs={{span:10,offset:1}}>\n        <Card bg=\"dark\" text=\"white\" style={{marginTop:'2vh'}}>\n            <Card.Img variant=\"top\" src={Poster} style={{maxHeight:'45vh'}}/>\n            <Card.Body>\n                <Card.Title>{Title}-{Year}</Card.Title>\n                <Button onClick={()=> history.push(`/movie/${imdbID}`)} type=\"button\" variant=\"primary\">Movie Details</Button>\n            </Card.Body>\n        </Card>\n        </Col>\n    )\n}\n\nMovieItem.propTypes = {\nmovie:PropTypes.object.isRequired\n}\n\nexport default withRouter(MovieItem)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport MovieItem from './MovieItem';\n\nconst Movies = ({movies,error,text}) => {\n\n    if(error!==null)\n    {\n        return <h2 style={{color:'red'}}>No Movies Found</h2>;\n    }\n    return (\n\n       ! movies || movies.length === 0 ?null:\n        movies.map((movie,index)=>{\n            return <MovieItem key={index} movie={movie}/>\n        })\n    )\n}\n\nMovies.propTypes = {\n    movies:PropTypes.array.isRequired\n}\nconst mapStateToProps= state =>({\n    movies:state.movies.movies,\n    error:state.movies.error,\n    text:state.movies.text\n})\n\nexport default connect(mapStateToProps,{})(Movies)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SearchForm from './SearchForm';\nimport {connect} from 'react-redux'\nimport Spinner from '../layout/Spinner';\nimport Movies from './Movies';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\nconst Landing = ({isLoading,error}) => {\n\n    return (\n        <Container fluid style={{marginTop:'3vh'}}>\n            <SearchForm/>\n          <Row style={{marginTop:'3vh',justifyContent:'center'}} >  {isLoading ? <Spinner/> : <Movies/>}</Row>\n        </Container>\n    )\n}\n\nLanding.propTypes = {\n\n}\n\nconst mapStateToProps= state => ({\n    isLoading:state.movies.isLoading,\n    error:state.movies.error\n})\n\nexport default connect(mapStateToProps,{})(Landing)\n","import React,{useEffect,useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner';\nimport {connect} from 'react-redux'\nimport {fetchMovie} from '../../store/actions/searchActions'\nimport {withRouter} from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Image from 'react-bootstrap/Image'\n\nconst Movie = ({movies:{isLoading,movie:{\n    Title,Year,Rated,Released,Runtime,Genre,Writer,Director,Actors,Poster,imdbRating\n},error},fetchMovie,match,history}) => {\n\n    useEffect(()=>{\n        fetchMovie(match.params.id);\n    },[fetchMovie])\n\n    if( error!==null)\n    {\n        return <Row style={{justifyContent:'center'}}> <h1 style={{color:'red',marginTop:'20vh'}}>Wrong Id!</h1></Row>\n    }\n\n    return (\n       isLoading? <Row style={{justifyContent:'center',marginTop:'20vh'}}><Spinner/></Row>:\n       <Container fluid >\n       <Row style={{alignContent:'center'}}>\n           <Col style={{marginTop:'2vh'}} lg={{span:4,offset:1}} md={{span:4,offset:1}} sm={{span:5,offset:0}} xs={{span:10,offset:1}}>\n           <Image src={Poster} rounded  fluid  />\n           </Col>\n           \n           <Col  style={{marginTop:'2vh'}}lg={{span:6,offset:0}} md={{span:7,offset:0}} sm={{span:7,offset:0}} xs={{span:10,offset:1}}>\n             <Card bg=\"dark\" text=\"white\" >\n                    <Card.Title style={{marginLeft:'18px',marginTop:'20px'}} >{Title}-{Year}</Card.Title>\n               <Card.Body >\n                   <Card.Text>\n                        <p><strong>Genre: </strong> {Genre}</p>\n                        <p><strong>Released: </strong> {Released}</p>\n                        <p><strong>Rating: </strong> {Rated}</p>\n                        <p><strong>IMDB Rating: </strong> {imdbRating}</p>\n                        <p><strong>Director: </strong> {Director}</p>\n                        <p><strong>Writer: </strong> {Writer}</p>\n                        <p><strong>Cast: </strong>{Actors}</p>\n                        <p><strong>Runtime: </strong>{Runtime}</p>\n                   </Card.Text>\n               </Card.Body>\n           </Card>\n           </Col>\n           <Button style={{marginTop:'3vh',marginLeft:'40vw'}} variant=\"dark\" type=\"button\" onClick={()=>history.push('/')}>Go Back To Search Page</Button>\n       </Row>\n   </Container>\n    )\n}\n\nMovie.propTypes = {\nmovies:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    movies:state.movies\n})\n\nexport default connect(mapStateToProps,{fetchMovie})(withRouter(Movie));\n","import React from 'react';\nimport './App.css';\nimport store from './store/store';\nimport {Provider} from 'react-redux'\nimport {HashRouter,Route} from 'react-router-dom'\n\nimport MovieNavbar from './components/layout/MovieNavbar';\nimport MovieFooter from './components/layout/MovieFooter';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\nfunction App() {\n  return (\n   \n     <Provider store={store}>\n        <HashRouter>\n          <MovieNavbar/>\n          <Route path=\"/movie/:id\" exact component={Movie} />\n          <Route path=\"/\" exact component={Landing}/>\n          <MovieFooter/>\n          \n     </HashRouter>\n     </Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}